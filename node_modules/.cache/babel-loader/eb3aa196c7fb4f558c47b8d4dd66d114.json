{"ast":null,"code":"var _jsxFileName = \"/Users/interviewbit/workspace/react/youtube-react-clone/src/ui/MediaCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { generateImageUrl, ImageSizes } from \"utils/tmdb\";\nimport TrailerModal from './TrailerModal';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction dayDiff(d) {\n  const date1 = new Date();\n  const date2 = new Date(d);\n  const diffTime = Math.abs(date2 - date1);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  const months = date1.getMonth() - date2.getMonth() + 12 * (date1.getFullYear() - date2.getFullYear());\n  const year = Math.ceil(months / 12);\n  console.log(months);\n\n  if (diffDays < 31) {\n    return diffDays + \" days\";\n  } else if (months < 12) {\n    return months + \" months\";\n  } else {\n    return year + \" years\";\n  }\n}\n\nfunction MediaCard({\n  media,\n  mediaType,\n  isLarge\n}) {\n  _s();\n\n  const [isTrailerOpen, setTrailerOpen] = useState(false);\n  const iconColor = {\n    color: \"white\",\n    cursor: \"pointer\",\n    height: 45,\n    width: 45\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-card\",\n      onClick: () => setTrailerOpen(true),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classNames('media-card__poster', {\n          'media-card__poster--large': isLarge\n        }),\n        src: isLarge ? generateImageUrl(media.poster_path, ImageSizes.poster) : generateImageUrl(media.backdrop_path, ImageSizes.card),\n        alt: media.original_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-card__cover\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-card__image\",\n          children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n            style: iconColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-card__desc\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-card__name\",\n            children: media.title || media.name || media.original_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-card__description\",\n            children: dayDiff(media.first_air_date) + ' ago'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, media.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isTrailerOpen && /*#__PURE__*/_jsxDEV(TrailerModal, {\n      mediaType: mediaType,\n      mediaId: media.id,\n      media: media,\n      onClose: () => setTrailerOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MediaCard, \"hcWDWsJNySoFWYqP2V5vDZEJzXw=\");\n\n_c = MediaCard;\nexport default MediaCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaCard\");","map":{"version":3,"sources":["/Users/interviewbit/workspace/react/youtube-react-clone/src/ui/MediaCard.js"],"names":["React","useState","classNames","generateImageUrl","ImageSizes","TrailerModal","AccountCircleIcon","dayDiff","d","date1","Date","date2","diffTime","Math","abs","diffDays","ceil","months","getMonth","getFullYear","year","console","log","MediaCard","media","mediaType","isLarge","isTrailerOpen","setTrailerOpen","iconColor","color","cursor","height","width","poster_path","poster","backdrop_path","card","original_title","title","name","original_name","first_air_date","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { generateImageUrl, ImageSizes } from \"utils/tmdb\";\nimport TrailerModal from './TrailerModal';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nfunction dayDiff(d) {\n  const date1 = new Date();\n  const date2 = new Date(d);\n  const diffTime = Math.abs(date2 - date1);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  const months = date1.getMonth() - date2.getMonth() + \n    (12 * (date1.getFullYear() - date2.getFullYear()))\n  const year = Math.ceil(months/12);\n  console.log(months);\n  if(diffDays < 31) {\n    return (diffDays + \" days\");\n  } else if(months < 12) {\n    return months + \" months\"\n  } else {\n    return year+\" years\"\n  }\n}\nfunction MediaCard({ media, mediaType, isLarge }) {\n  const [isTrailerOpen, setTrailerOpen] = useState(false);\n  const iconColor = {\n    color: \"white\",\n    cursor: \"pointer\",\n    height: 45,\n    width: 45,\n  };\n  return (\n    <>\n      <div\n        key={media.id}\n        className=\"media-card\"\n        onClick={() => setTrailerOpen(true)}\n      >\n        <img\n          className={classNames(\n            'media-card__poster',\n            { 'media-card__poster--large': isLarge },\n          )}\n          src={\n            isLarge\n            ? generateImageUrl(media.poster_path, ImageSizes.poster)\n            : generateImageUrl(media.backdrop_path, ImageSizes.card)\n          }\n          alt={media.original_title}\n        />\n        <div className=\"media-card__cover\">\n          <div className=\"media-card__image\">\n            <AccountCircleIcon\n              style={iconColor}\n            />\n          </div>\n          <div className=\"media-card__desc\">\n            <div className=\"media-card__name\">\n              {media.title || media.name || media.original_name}\n            </div>\n            <div className=\"media-card__description\">\n              {dayDiff(media.first_air_date) + ' ago'}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isTrailerOpen && (\n        <TrailerModal\n          mediaType={mediaType}\n          mediaId={media.id}\n          media={media}\n          onClose={() => setTrailerOpen(false)}\n        />\n      )}\n    </>\n  );\n}\n\nexport default MediaCard;\n"]},"metadata":{},"sourceType":"module"}