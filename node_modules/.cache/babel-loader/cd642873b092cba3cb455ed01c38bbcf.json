{"ast":null,"code":"var _jsxFileName = \"/Users/interviewbit/workspace/react/youtube-react-clone/src/ui/TrailerModal.js\",\n    _s = $RefreshSig$();\n\nimport tmdbApi from 'api/tmdb';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TrailerModal({\n  mediaType,\n  mediaId,\n  onClose\n}) {\n  _s();\n\n  const [videoId, setVideoId] = useState(null);\n  useEffect(() => {\n    async function fetchTrailer() {\n      const json = await tmdbApi.get(`/${mediaType}/${mediaId}/videos`);\n      const video = json.results.find(o => o.site === 'YouTube');\n      setVideoId(video === null || video === void 0 ? void 0 : video.key);\n    }\n\n    fetchTrailer(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trailer-modal-backdrop\",\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trailer-modal\",\n      children: [videoId && /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"100%\",\n        height: \"100%\",\n        src: `https://www.youtube.com/embed/${videoId}`,\n        title: \"YouTube video player\",\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"trailer-modal__close\",\n        onClick: onClose,\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TrailerModal, \"QSIaaPSBLOfzq/pCQzaKjYkXLn8=\");\n\n_c = TrailerModal;\nexport default TrailerModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrailerModal\");","map":{"version":3,"sources":["/Users/interviewbit/workspace/react/youtube-react-clone/src/ui/TrailerModal.js"],"names":["tmdbApi","React","useEffect","useState","TrailerModal","mediaType","mediaId","onClose","videoId","setVideoId","fetchTrailer","json","get","video","results","find","o","site","key"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,UAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAtB,EAAuD;AAAA;;AACrD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,YAAf,GAA8B;AAC5B,YAAMC,IAAI,GAAG,MAAMX,OAAO,CAACY,GAAR,CAAa,IAAGP,SAAU,IAAGC,OAAQ,SAArC,CAAnB;AACA,YAAMO,KAAK,GAAGF,IAAI,CAACG,OAAL,CAAaC,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,SAAlC,CAAd;AACAR,MAAAA,UAAU,CAACI,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEK,GAAR,CAAV;AACD;;AAEDR,IAAAA,YAAY,GAPE,CAQhB;AACC,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAwC,MAAA,OAAO,EAAEH;AAAjD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACGC,OAAO,iBACN;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,GAAG,EAAG,iCAAgCA,OAAQ,EAHhD;AAIE,QAAA,KAAK,EAAC,sBAJR;AAKE,QAAA,WAAW,EAAC,GALd;AAME,QAAA,KAAK,EAAC,0FANR;AAOE,QAAA,eAAe;AAPjB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAYE;AACE,QAAA,SAAS,EAAC,sBADZ;AAEE,QAAA,OAAO,EAAED,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAwBD;;GAtCQH,Y;;KAAAA,Y;AAwCT,eAAeA,YAAf","sourcesContent":["import tmdbApi from 'api/tmdb';\nimport React, { useEffect, useState } from 'react';\n\nfunction TrailerModal({ mediaType, mediaId, onClose }) {\n  const [videoId, setVideoId] = useState(null);\n\n  useEffect(() => {\n    async function fetchTrailer() {\n      const json = await tmdbApi.get(`/${mediaType}/${mediaId}/videos`);\n      const video = json.results.find(o => o.site === 'YouTube');\n      setVideoId(video?.key);\n    }\n\n    fetchTrailer();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <div className=\"trailer-modal-backdrop\" onClick={onClose} />\n      <div className=\"trailer-modal\">\n        {videoId && (\n          <iframe\n            width=\"100%\"\n            height=\"100%\"\n            src={`https://www.youtube.com/embed/${videoId}`}\n            title=\"YouTube video player\"\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          />\n        )}\n        <button\n          className=\"trailer-modal__close\"\n          onClick={onClose}\n        >\n          âœ•\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default TrailerModal;\n"]},"metadata":{},"sourceType":"module"}